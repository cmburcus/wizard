---
################################################################################
#
# This file defines the paths of directories and subdirectories of an express
# backend project
#
# Each parent should follow the following structure
# Note: you can ignore the path if it's the root of a project folder
# Note: Parents can be nested to created a subfolder structure
#
# [parent : name to be referenced by]
#   [path : the relative path from the root of the project]
#   [files : array of paths to the files]
#
################################################################################

################################################################################
#
# GLOBALS
#
# Globals used at the creation of a new project
################################################################################
globals:
  files:
    - .prettierrc
    - .wizard
    - PULL_REQUEST_TEMPLATE.md

################################################################################
#
# TEMPLATES
#
# The base template directories where the template files are found
################################################################################
templates:
  express: express/core
  expressAuth: express/authentication

################################################################################
#
# CORE
#
# The core directories and files of an express backend project (destination
# folder)
# The templates should use the same folder structure for easy mapping
################################################################################
core:
  files:
    - package.json
    - .node-version
    - .gitignore
    - .eslintrc
    - .env.example
    - .env
    - nodemon.json
    - .nycrc
    - tsconfig.json
  bin:
    path: bin
    files:
      - bin/www
  src:
    path: src
    files:
      - src/app.ts
    config:
      path: src/config
      files:
        - src/config/database.ts
        - src/config/routes.json
    database:
      path: src/database
      files:
        - src/database/knexfile.ts
        - src/database/migration.stub
        - src/database/seed.stub
      migrations:
        path: src/database/migrations
      seeds:
        path: src/database/seeds
    resources:
      path: src/resources
      files:
        - src/resources/Model.ts
        - src/resources/Service.ts
        - src/resources/Controller.ts
    tests:
      path: src/tests
      integration:
        path: src/tests/integration
        files:
          - src/tests/integration/Service.test.ts
      unit:
        path: src/tests/unit
        resources:
          path: src/tests/unit/resources
          files:
            - src/tests/unit/resources/Model.test.ts
            - src/tests/unit/resources/Controller.test.ts

################################################################################
#
# AUTHENTICATION
#
# The authentication directories and files of an express backend
# project (destination folder)
# The templates should use the same folder structure for easy mapping
################################################################################

authentication:
  src:
    path: src
    database:
      path: src/database
      migrations:
        path: src/database/migrations
        files:
          - src/database/migrations/00000000000000_create_authentications_table.ts
          - src/database/migrations/00000000000000_create_password_resets_table.ts
    resources:
      path: src/resources
      authentication:
        path: src/resources/Authentication
        files:
          - src/resources/Authentication/Model.ts
          - src/resources/Authentication/Service.ts
          - src/resources/Authentication/Controller.ts
          - src/resources/Authentication/routes.ts
      passwordReset:
        path: src/resources/PasswordReset
        files:
          - src/resources/PasswordReset/Model.ts
          - src/resources/PasswordReset/Service.ts
          - src/resources/PasswordReset/Controller.ts
          - src/resources/PasswordReset/routes.ts
    tests:
      path: src/tests
      e2e:
        path: src/tests/e2e
        authentication:
          path: src/tests/e2e/Authentication
          files:
            - src/tests/e2e/Authentication/api.test.ts
            - src/tests/e2e/Authentication/validation.ts
        passwordReset:
          path: src/tests/e2e/PasswordReset
          files:
            - src/tests/e2e/PasswordReset/api.test.ts
      integration:
        path: src/tests/integration
        authentication:
          path: src/tests/integration/Authentication
          files:
            - src/tests/integration/Authentication/Service.test.ts
        passwordReset:
          path: src/tests/integration/PasswordReset
          files:
            - src/tests/integration/PasswordReset/Service.test.ts
      unit:
        path: src/tests/unit
        resources:
          path: src/tests/unit/resources
          authentication:
            path: src/tests/unit/resources/Authentication
            files:
              - src/tests/unit/resources/Authentication/Model.test.ts
          passwordReset:
            path: src/tests/unit/resources/PasswordReset
            files:
              - src/tests/unit/resources/PasswordReset/Model.test.ts

################################################################################
#
# UTILS
#
# Utils are essentially helpers that provide functionality to the core
# application
#
# They are treated separately as they are not "required" for an application
# to run
#
# They could also be exported to a package repository and imported using
# package.json
################################################################################

# CORE UTILS
core_utils:
  path: src/utils
  errors:
    path: src/utils/errors
    files:
      - src/utils/errors/readme.md
      - src/utils/errors/index.ts
    types:
      path: src/utils/errors/types
      files:
        - src/utils/errors/types/AuthenticationError.ts
        - src/utils/errors/types/InvalidArgumentError.ts
        - src/utils/errors/types/InvalidTokenError.ts
        - src/utils/errors/types/NotFoundError.ts
        - src/utils/errors/types/SystemError.ts
        - src/utils/errors/types/ValidationError.ts
    tests:
      unit:
        path: src/tests/unit/utils
        files:
          - src/tests/unit/utils/errors.test.ts
  filters:
    path: src/utils/filters
    files:
      - src/utils/filters/readme.md
      - src/utils/filters/index.ts
    constants:
      path: src/utils/filters/constants
      files:
        - src/utils/filters/constants/filters.json
    tests:
      unit:
        path: src/tests/unit/utils
        files:
          - src/tests/unit/utils/filters.test.ts
  validator:
    path: src/utils/validator
    files:
      - src/utils/validator/readme.md
      - src/utils/validator/index.ts
    config:
      path: src/utils/validator/config
      files:
        - src/utils/validator/config/joi.json
    tests:
      unit:
        path: src/tests/unit/utils
        files:
          - src/tests/unit/utils/validator.test.ts

# AUTHENTICATION UTILS
authentication_utils:
  path: src/utils
  jwt:
    path: src/utils/jwt
    files:
      - src/utils/jwt/readme.md
      - src/utils/jwt/index.ts
    tests:
      unit:
        path: src/tests/unit/utils
        files:
          - src/tests/unit/utils/jwt.test.ts
