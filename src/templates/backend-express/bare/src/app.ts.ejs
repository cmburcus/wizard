'use strict';

// Defining require for local dependencies to use absolute paths
import path from 'path';
import express from 'express';
import cookieParser from 'cookie-parser';
import logger from 'morgan';
import dotenv from 'dotenv';

import Knex from 'knex';
import { Model } from 'objection';

import errorUtil from './utils/errors';
import databaseConfig from './config/database';
import routesConfig from './config/routes';

// Initialize dotenv
dotenv.config();

const app = express();

// Initialize knex.
/* istanbul ignore next */
// @ts-ignore
const knex: any = Knex(databaseConfig[app.get('env') || 'development']);

// Bind all Models to a knex instance. If you only have one database in
// your server this is all you have to do. For multi database systems, see
// the Model.bindKnex method.
Model.knex(knex);

/* istanbul ignore next */
if (!app.get('env') || app.get('env') === 'development') {
  app.use(logger('dev'));
}

app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());

routesConfig.setRoutes(app);

// Error and 404 handlers
app.use(errorUtil.notFoundHandler);
app.use(errorUtil.errorHandler);

module.exports = app;
