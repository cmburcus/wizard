'use strict';

// Defining require for local dependencies to use absolute paths
const path = require('path');
require.main.app = (filepath) => require(path.join(__dirname, filepath));

const express = require('express');
const cookieParser = require('cookie-parser');
const logger = require('morgan');
const Knex = require('knex');
const Model = require('objection').Model;

const errorUtil = require.main.app('utils/errors');
const databaseConfig = require.main.app('config/database');
const routesConfig = require.main.app('config/routes');

require('dotenv').config();

const app = express();

// Initialize knex.
/* istanbul ignore next */
const knex = Knex(databaseConfig[app.get('env') || 'development']);

// Bind all Models to a knex instance. If you only have one database in
// your server this is all you have to do. For multi database systems, see
// the Model.bindKnex method.
Model.knex(knex);

/* istanbul ignore next */
if (!app.get('env') || app.get('env') === 'development') {
  app.use(logger('dev'));
}

app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());

routesConfig.setRoutes(app);

// Error and 404 handlers
app.use(errorUtil.notFoundHandler);
app.use(errorUtil.errorHandler);

module.exports = app;
