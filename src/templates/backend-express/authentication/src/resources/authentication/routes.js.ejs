'use strict';

const express = require('express');
const router = express.Router();

const validator = require.main.app('utils/validator');
const AuthenticationController = require.main.app(
  'resources/authentication/AuthenticationController'
);
const AuthenticationService = require.main.app('resources/authentication/AuthenticationService');
const { joiSchema, joiPatchSchema, joiAuthenticateSchema } = require.main.app(
  'resources/authentication/Authentication'
);

/**
 * Authentication router
 */

router
  // Authentication specific routes
  .post(
    '/register',
    validator.validateSchema(joiSchema),
    validator.uniqueField('authority_id', AuthenticationService.countBy),
    validator.uniqueField('email', AuthenticationService.countBy),
    AuthenticationController.register
  )
  .post(
    '/authenticate',
    validator.validateSchema(joiAuthenticateSchema),
    AuthenticationController.authenticate
  )
  .get('/verify', AuthenticationController.verify)

  // Basic routes
  .get('/', AuthenticationController.query)
  .get('/:id', AuthenticationController.show)
  .post(
    '/',
    validator.validateSchema(joiSchema),
    validator.uniqueField('authority_id', AuthenticationService.countBy),
    validator.uniqueField('email', AuthenticationService.countBy),
    AuthenticationController.create
  )
  .put(
    '/:id',
    validator.validateSchema(joiSchema),
    validator.uniqueField('authority_id', AuthenticationService.countBy, 'id'),
    validator.uniqueField('email', AuthenticationService.countBy, 'id'),
    AuthenticationController.update
  )
  .patch(
    '/:id',
    validator.validateSchema(joiPatchSchema),
    validator.uniqueField('authority_id', AuthenticationService.countBy, 'id'),
    validator.uniqueField('email', AuthenticationService.countBy, 'id'),
    AuthenticationController.patch
  )
  .delete('/:id', AuthenticationController.delete);

module.exports = router;
